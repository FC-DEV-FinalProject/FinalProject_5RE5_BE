name: CI & Deploy Pipeline

# 1. 이벤트 설정
on:
  # PR 요청이 들어올 때 빌드와 테스트 실행
  pull_request:
    branches:
      - main  # main 브랜치로의 PR일 때 실행
      - develop

  # develop 브랜치에 push가 되면 자동 배포 실행
  push:
    branches:
      - develop

# 2. 빌드 및 테스트 잡
jobs:
  build-and-test:
    # PR 요청이 들어왔을 때만 실행
    if: github.event_name == 'push'

    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Check out code
        uses: actions/checkout@v3

      # JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 의존성 캐시 설정
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 빌드 및 테스트 실행
      - name: Build and Test
        run: ./gradlew build
        
      - name: Run Tests
        run: ./gradlew test

      - name: Lint Checks
        run: ./gradlew check

  # # 3. develop에서 main으로 자동 배포 작업
  # deploy-to-main:
  #   # develop 브랜치에 push될 때만 실행
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

  #   runs-on: ubuntu-latest
  #   needs: build-and-test  # 빌드와 테스트가 완료된 후에 실행

  #   steps:
  #     # 코드 체크아웃
  #     - name: Check out code
  #       uses: actions/checkout@v3
        
  #     - name: Configure git
  #       run: |
  #         git config --global user.name "${{ github.actor }}"
  #         git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          
  #     # main 브랜치로 병합
  #     - name: Merge develop to main
  #       run: |
  #         git remote update
  #         git checkout main
  #         git config pull.rebase true
  #         git pull origin main  # 최신 상태로 동기화
  #         git pull origin develop --allow-unrelated-histories
  #         git rebase --skip
          
  #     # 병합 결과를 main 브랜치에 푸시
  #     - name: Push to main
  #       run: |
  #         git push origin main
